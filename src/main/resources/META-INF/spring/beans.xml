<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:ctx="http://www.springframework.org/schema/context"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:osgix="http://www.springframework.org/schema/osgi-compendium"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://www.springframework.org/schema/osgi-compendium http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd">

  <!-- Make config properties available to both spring and camel -->	
  <bean id="bridgePropertyPlaceholder" class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
    <property name="properties" ref="ciaoProperties" />
    <!-- Be tolerant of clashes between missing spring placeholders and Camel simple expressions -->
    <property name="ignoreUnresolvablePlaceholders" value="true" />
  </bean>

  <!-- Select 'dynamic' spring imports - determined via CIAO properties -->
  <import resource="messaging/${messagingConfig}.xml"/>
  <import resource="ssl/${sslConfig}.xml"/>

  <!-- This will add our java beans to the camel registry so they can be
       accessed from our routes -->
  <bean id="payloadBuilder" class="uk.nhs.ciao.spine.psd.hl7.HL7PayloadBuilder"/>
  <bean id="patientPostProcessor" class="uk.nhs.ciao.fhir.PatientPostProcessor"/>
  <bean id="patientResponseProcessor" class="uk.nhs.ciao.fhir.PatientResponseProcessor"/>
  <bean id="conformanceProcessor" class="uk.nhs.ciao.fhir.ConformanceProcessor"/>
  
  <bean id="QueryActFailedProcessor" class="uk.nhs.ciao.fhir.QueryActFailedProcessor"/>
  <bean id="SOAPFaultProcessor" class="uk.nhs.ciao.fhir.SOAPFaultProcessor"/>
  <bean id="HTTPErrorProcessor" class="uk.nhs.ciao.fhir.HTTPErrorProcessor"/>

  <camel:camelContext id="ciao-fhir" xmlns="http://camel.apache.org/schema/spring" trace="true" streamCache="true">
		<properties>
			<property key="CamelLogDebugStreams" value="true" />
		</properties>
    <!-- Tell Camel where our Java DSL routes can be found. It will look
         for any classes in this package that extend the RouteBuilder class
    -->
    <package>uk.nhs.ciao.fhir</package>
  </camel:camelContext>

</beans>